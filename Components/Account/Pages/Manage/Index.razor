@page "/Account/Manage"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@using BlazorAuthentication.Data

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager

<PageTitle>Profile</PageTitle>

<h3>Profile</h3>
<StatusMessage />

<div class="row">
	<div class="col-md-6">
		<EditForm Model="Input" FormName="profile" OnValidSubmit="OnValidSubmitAsync" method="post">
			<DataAnnotationsValidator />
			<ValidationSummary class="text-danger" role="alert" />
			<div class="form-floating mb-3">
				<input type="text" value="@username" class="form-control" placeholder="Please choose your username." disabled />
				<label for="username" class="form-label">Username</label>
			</div>
			 			<div class="form-floating mb-3"> 
			 				<InputText @bind-Value="Input.PhoneNumber" class="form-control" placeholder="Please enter your phone number." /> 
							<label for="phone-number" class="form-label">Phone number</label> 
						<ValidationMessage For="() => Input.PhoneNumber" class="text-danger" /> 
						</div>
						<div class="form-floating mb-3"> 
			 				<InputDate @bind-Value="Input.DOB" class="form-control" placeholder="Please enter your date of birth." /> 
							<label for="dob" class="form-label">DOB</label> 
						<ValidationMessage For="() => Input.DOB" class="text-danger" /> 
						</div>
					<button type="submit" class="w-100 btn btn-lg btn-primary">Save</button> 
		</EditForm>
	</div>
</div>

@code {
	private ApplicationUser user = default!;
	private string? username;
	private string? phoneNumber;

	[CascadingParameter]
	private HttpContext HttpContext { get; set; } = default!;

	[SupplyParameterFromForm]
	private InputModel Input { get; set; } = new();

	protected override async Task OnInitializedAsync()
	{
		user = await UserAccessor.GetRequiredUserAsync(HttpContext);
		username = await UserManager.GetUserNameAsync(user);
		phoneNumber = await UserManager.GetPhoneNumberAsync(user);

		Input.PhoneNumber ??= phoneNumber;
		Input.DOB ??= user.DOB;

	}

	private async Task OnValidSubmitAsync()
	{
		user.DOB = Input.DOB;

		user.PhoneNumber = Input.PhoneNumber;

		IdentityResult updateResult = await UserManager.UpdateAsync(user);


		if (!updateResult.Succeeded)
		{
			RedirectManager.RedirectToCurrentPageWithStatus("Error: Failed to set phone number.", HttpContext);
		}


		await SignInManager.RefreshSignInAsync(user);
		RedirectManager.RedirectToCurrentPageWithStatus("Your profile has been updated", HttpContext);
	}

	private sealed class InputModel
	{
		[Phone]
		[Display(Name = "Phone number")]
		public string? PhoneNumber { get; set; }

		public DateOnly? DOB { get; set; }
	}
}
